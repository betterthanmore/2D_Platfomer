//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/01.PlayerPrefabs/Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controller : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controller()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controller"",
    ""maps"": [
        {
            ""name"": ""MainPlayer"",
            ""id"": ""d60bee33-aa1f-4ae2-b882-94d9e5b3ad56"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""27156c9a-adaa-4832-b78e-cb5c2cd6c98f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Heal, BoxHold"",
                    ""type"": ""Button"",
                    ""id"": ""8fa7c534-f9ed-4955-8d9a-1ac62dac7ad4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f06e5b3e-d887-441d-8d4c-0d30e82d6e56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lever"",
                    ""type"": ""Button"",
                    ""id"": ""2d611da8-c1e4-43f1-8549-c71ce8f8b22b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""62f8539f-8069-47d7-9888-b50eae7c5c35"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Portal"",
                    ""type"": ""Button"",
                    ""id"": ""f930c55c-b18f-4d10-92a1-6781c06a5b8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reroad"",
                    ""type"": ""Button"",
                    ""id"": ""c49bb5c2-a1e6-48e7-8048-f6c4616eb649"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4ced8a7d-2439-4d5c-b873-20e604011d75"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4613277c-0cc9-40d7-8c4b-decdefb6c3f9"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal, BoxHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e531a48-d02a-4251-85c1-720b57c8e35e"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal, BoxHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""b592466a-1525-4be6-a8ab-131b1a1d6ca3"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3b403c81-407f-43f0-862e-e888a599bf4e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0b01bf4d-0bd6-4477-b997-237937fa3a88"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e71cf70a-5330-45a4-895f-d7a12c558732"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f939d49-2631-4df1-9312-a06aec928a06"",
                    ""path"": ""<Keyboard>/#(W)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05c37fbd-fab0-4bdc-835e-7c8f328e3705"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lever"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""080faa54-7272-44ad-a305-d947d56dc4c6"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lever"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0557993d-4353-4ab8-9800-63ca923b4c61"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec4da2fc-1cb6-4023-87c6-85e943d8275f"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Portal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af314135-2b7a-4710-b5d6-c4c65db39a73"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Portal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f913b622-5427-4313-b495-0ffef96ed432"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reroad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9600099-5319-47a3-a86b-45ea5ffe0e86"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reroad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SubPlayer"",
            ""id"": ""5098502a-951d-476f-a314-f4735e673a00"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""69ff8abb-e288-4422-a2f5-ed41acd60f2c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Break"",
                    ""type"": ""Button"",
                    ""id"": ""736d0cf2-161f-4280-b73e-881070a10e35"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BoostHold"",
                    ""type"": ""Button"",
                    ""id"": ""19991878-c18a-4e2b-a1cb-485363f32f59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BoostKeyUp"",
                    ""type"": ""Button"",
                    ""id"": ""9648968b-5edb-4324-b6bb-a5a06002becf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BoostKeyDown"",
                    ""type"": ""Button"",
                    ""id"": ""3e81270b-2958-42b7-95f8-e12a9ba8f04d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lever"",
                    ""type"": ""Button"",
                    ""id"": ""4fe4df82-445d-42b6-8cfa-907cb9582be2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""e3d62a82-780f-4d3a-a731-8105d669e2d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Portal"",
                    ""type"": ""Button"",
                    ""id"": ""9ac2feab-4940-428c-9a28-0c23c2587443"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reroad"",
                    ""type"": ""Button"",
                    ""id"": ""f25c7593-3f4f-4e68-ac1f-e1e7c7f4308f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""581bcca1-c0c5-495a-aa90-5346fecc4a1c"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""399c85ea-f78a-414e-b5f3-e71cfde35232"",
                    ""path"": ""<XInputController>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Break"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""c99fff99-3627-4671-b349-1eab4807a61d"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""52b28263-d462-4b9f-82a9-da6a7fc92539"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""39d7f9c0-4543-4424-8a9c-816420eba451"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""668053f8-e999-46c0-9c91-dcecc153cefd"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BoostHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""277492f8-6480-493e-9c71-4247e551f666"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BoostHold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6410171b-8e22-412a-b4f3-f900ad1d2b01"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BoostKeyDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46798e3d-6ee4-467e-ae50-90eef31d4c63"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BoostKeyDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b962ff0-9d61-4b78-a03a-a1a763a70e3c"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BoostKeyUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31ba89fc-2d41-450d-a40e-b960aca5f6d8"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BoostKeyUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3efc90e3-783d-4136-8e5e-19e4e91fef65"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lever"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cbdce39-6e8e-4e4e-8373-24d9e90cd772"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lever"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c4d583e-353e-4887-809b-821a91192f8e"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19af8cb1-078f-4c43-aa7b-45f53f54f11e"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Portal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d90c95f2-8295-41f5-a5c4-ecfcbc8f9931"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Portal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd9a5eac-0b9e-4e6a-9f60-46e6c770d818"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reroad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da270ae1-d55c-45dc-bb26-cfea832f47e1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reroad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MainPlayer
        m_MainPlayer = asset.FindActionMap("MainPlayer", throwIfNotFound: true);
        m_MainPlayer_Move = m_MainPlayer.FindAction("Move", throwIfNotFound: true);
        m_MainPlayer_HealBoxHold = m_MainPlayer.FindAction("Heal, BoxHold", throwIfNotFound: true);
        m_MainPlayer_Jump = m_MainPlayer.FindAction("Jump", throwIfNotFound: true);
        m_MainPlayer_Lever = m_MainPlayer.FindAction("Lever", throwIfNotFound: true);
        m_MainPlayer_Pause = m_MainPlayer.FindAction("Pause", throwIfNotFound: true);
        m_MainPlayer_Portal = m_MainPlayer.FindAction("Portal", throwIfNotFound: true);
        m_MainPlayer_Reroad = m_MainPlayer.FindAction("Reroad", throwIfNotFound: true);
        // SubPlayer
        m_SubPlayer = asset.FindActionMap("SubPlayer", throwIfNotFound: true);
        m_SubPlayer_Move = m_SubPlayer.FindAction("Move", throwIfNotFound: true);
        m_SubPlayer_Break = m_SubPlayer.FindAction("Break", throwIfNotFound: true);
        m_SubPlayer_BoostHold = m_SubPlayer.FindAction("BoostHold", throwIfNotFound: true);
        m_SubPlayer_BoostKeyUp = m_SubPlayer.FindAction("BoostKeyUp", throwIfNotFound: true);
        m_SubPlayer_BoostKeyDown = m_SubPlayer.FindAction("BoostKeyDown", throwIfNotFound: true);
        m_SubPlayer_Lever = m_SubPlayer.FindAction("Lever", throwIfNotFound: true);
        m_SubPlayer_Pause = m_SubPlayer.FindAction("Pause", throwIfNotFound: true);
        m_SubPlayer_Portal = m_SubPlayer.FindAction("Portal", throwIfNotFound: true);
        m_SubPlayer_Reroad = m_SubPlayer.FindAction("Reroad", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MainPlayer
    private readonly InputActionMap m_MainPlayer;
    private IMainPlayerActions m_MainPlayerActionsCallbackInterface;
    private readonly InputAction m_MainPlayer_Move;
    private readonly InputAction m_MainPlayer_HealBoxHold;
    private readonly InputAction m_MainPlayer_Jump;
    private readonly InputAction m_MainPlayer_Lever;
    private readonly InputAction m_MainPlayer_Pause;
    private readonly InputAction m_MainPlayer_Portal;
    private readonly InputAction m_MainPlayer_Reroad;
    public struct MainPlayerActions
    {
        private @Controller m_Wrapper;
        public MainPlayerActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_MainPlayer_Move;
        public InputAction @HealBoxHold => m_Wrapper.m_MainPlayer_HealBoxHold;
        public InputAction @Jump => m_Wrapper.m_MainPlayer_Jump;
        public InputAction @Lever => m_Wrapper.m_MainPlayer_Lever;
        public InputAction @Pause => m_Wrapper.m_MainPlayer_Pause;
        public InputAction @Portal => m_Wrapper.m_MainPlayer_Portal;
        public InputAction @Reroad => m_Wrapper.m_MainPlayer_Reroad;
        public InputActionMap Get() { return m_Wrapper.m_MainPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainPlayerActions set) { return set.Get(); }
        public void SetCallbacks(IMainPlayerActions instance)
        {
            if (m_Wrapper.m_MainPlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnMove;
                @HealBoxHold.started -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnHealBoxHold;
                @HealBoxHold.performed -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnHealBoxHold;
                @HealBoxHold.canceled -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnHealBoxHold;
                @Jump.started -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnJump;
                @Lever.started -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnLever;
                @Lever.performed -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnLever;
                @Lever.canceled -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnLever;
                @Pause.started -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnPause;
                @Portal.started -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnPortal;
                @Portal.performed -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnPortal;
                @Portal.canceled -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnPortal;
                @Reroad.started -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnReroad;
                @Reroad.performed -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnReroad;
                @Reroad.canceled -= m_Wrapper.m_MainPlayerActionsCallbackInterface.OnReroad;
            }
            m_Wrapper.m_MainPlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @HealBoxHold.started += instance.OnHealBoxHold;
                @HealBoxHold.performed += instance.OnHealBoxHold;
                @HealBoxHold.canceled += instance.OnHealBoxHold;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Lever.started += instance.OnLever;
                @Lever.performed += instance.OnLever;
                @Lever.canceled += instance.OnLever;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Portal.started += instance.OnPortal;
                @Portal.performed += instance.OnPortal;
                @Portal.canceled += instance.OnPortal;
                @Reroad.started += instance.OnReroad;
                @Reroad.performed += instance.OnReroad;
                @Reroad.canceled += instance.OnReroad;
            }
        }
    }
    public MainPlayerActions @MainPlayer => new MainPlayerActions(this);

    // SubPlayer
    private readonly InputActionMap m_SubPlayer;
    private ISubPlayerActions m_SubPlayerActionsCallbackInterface;
    private readonly InputAction m_SubPlayer_Move;
    private readonly InputAction m_SubPlayer_Break;
    private readonly InputAction m_SubPlayer_BoostHold;
    private readonly InputAction m_SubPlayer_BoostKeyUp;
    private readonly InputAction m_SubPlayer_BoostKeyDown;
    private readonly InputAction m_SubPlayer_Lever;
    private readonly InputAction m_SubPlayer_Pause;
    private readonly InputAction m_SubPlayer_Portal;
    private readonly InputAction m_SubPlayer_Reroad;
    public struct SubPlayerActions
    {
        private @Controller m_Wrapper;
        public SubPlayerActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_SubPlayer_Move;
        public InputAction @Break => m_Wrapper.m_SubPlayer_Break;
        public InputAction @BoostHold => m_Wrapper.m_SubPlayer_BoostHold;
        public InputAction @BoostKeyUp => m_Wrapper.m_SubPlayer_BoostKeyUp;
        public InputAction @BoostKeyDown => m_Wrapper.m_SubPlayer_BoostKeyDown;
        public InputAction @Lever => m_Wrapper.m_SubPlayer_Lever;
        public InputAction @Pause => m_Wrapper.m_SubPlayer_Pause;
        public InputAction @Portal => m_Wrapper.m_SubPlayer_Portal;
        public InputAction @Reroad => m_Wrapper.m_SubPlayer_Reroad;
        public InputActionMap Get() { return m_Wrapper.m_SubPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SubPlayerActions set) { return set.Get(); }
        public void SetCallbacks(ISubPlayerActions instance)
        {
            if (m_Wrapper.m_SubPlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnMove;
                @Break.started -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBreak;
                @Break.performed -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBreak;
                @Break.canceled -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBreak;
                @BoostHold.started -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBoostHold;
                @BoostHold.performed -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBoostHold;
                @BoostHold.canceled -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBoostHold;
                @BoostKeyUp.started -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBoostKeyUp;
                @BoostKeyUp.performed -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBoostKeyUp;
                @BoostKeyUp.canceled -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBoostKeyUp;
                @BoostKeyDown.started -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBoostKeyDown;
                @BoostKeyDown.performed -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBoostKeyDown;
                @BoostKeyDown.canceled -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnBoostKeyDown;
                @Lever.started -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnLever;
                @Lever.performed -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnLever;
                @Lever.canceled -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnLever;
                @Pause.started -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnPause;
                @Portal.started -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnPortal;
                @Portal.performed -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnPortal;
                @Portal.canceled -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnPortal;
                @Reroad.started -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnReroad;
                @Reroad.performed -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnReroad;
                @Reroad.canceled -= m_Wrapper.m_SubPlayerActionsCallbackInterface.OnReroad;
            }
            m_Wrapper.m_SubPlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Break.started += instance.OnBreak;
                @Break.performed += instance.OnBreak;
                @Break.canceled += instance.OnBreak;
                @BoostHold.started += instance.OnBoostHold;
                @BoostHold.performed += instance.OnBoostHold;
                @BoostHold.canceled += instance.OnBoostHold;
                @BoostKeyUp.started += instance.OnBoostKeyUp;
                @BoostKeyUp.performed += instance.OnBoostKeyUp;
                @BoostKeyUp.canceled += instance.OnBoostKeyUp;
                @BoostKeyDown.started += instance.OnBoostKeyDown;
                @BoostKeyDown.performed += instance.OnBoostKeyDown;
                @BoostKeyDown.canceled += instance.OnBoostKeyDown;
                @Lever.started += instance.OnLever;
                @Lever.performed += instance.OnLever;
                @Lever.canceled += instance.OnLever;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Portal.started += instance.OnPortal;
                @Portal.performed += instance.OnPortal;
                @Portal.canceled += instance.OnPortal;
                @Reroad.started += instance.OnReroad;
                @Reroad.performed += instance.OnReroad;
                @Reroad.canceled += instance.OnReroad;
            }
        }
    }
    public SubPlayerActions @SubPlayer => new SubPlayerActions(this);
    public interface IMainPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnHealBoxHold(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnLever(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnPortal(InputAction.CallbackContext context);
        void OnReroad(InputAction.CallbackContext context);
    }
    public interface ISubPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnBreak(InputAction.CallbackContext context);
        void OnBoostHold(InputAction.CallbackContext context);
        void OnBoostKeyUp(InputAction.CallbackContext context);
        void OnBoostKeyDown(InputAction.CallbackContext context);
        void OnLever(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnPortal(InputAction.CallbackContext context);
        void OnReroad(InputAction.CallbackContext context);
    }
}
